{"version":3,"sources":["App.js","index.js"],"names":["formatter","Intl","NumberFormat","App","props","handleChange","bind","state","NewConfirmed","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","Countries","this","getData","Axios","get","response","x","resCountries","setState","data","Global","joined","concat","Country","sort","event","console","log","target","value","chosenCountry","countryData","countryData2","i","map","country","key","className","onChange","renderCountryOptions","style","paddingBottom","format","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kSAIMA,G,MAAY,IAAIC,KAAKC,aAAa,OAEnBC,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,aAAe,EAAKA,aAAaC,KAAlB,gBAEpB,EAAKC,MAAQ,CACTC,aAAc,EACdC,eAAgB,EAChBC,UAAW,EACXC,YAAa,EACbC,aAAc,EACdC,eAAgB,EAChBC,UAAW,IAZA,E,gEAiBfC,KAAKC,Y,sKAIkBC,IAAMC,IAAI,sC,cAA3BC,E,gBAEqBF,IAAMC,IAAI,wC,OAcrC,IAAIE,KAdEC,E,OAGNN,KAAKO,SAAS,CACVd,aAAcW,EAASI,KAAKC,OAAOhB,aACnCC,eAAgBU,EAASI,KAAKC,OAAOf,eACrCC,UAAWS,EAASI,KAAKC,OAAOd,UAChCC,YAAaQ,EAASI,KAAKC,OAAOb,YAClCC,aAAcO,EAASI,KAAKC,OAAOZ,aACnCC,eAAgBM,EAASI,KAAKC,OAAOX,iBAIrCO,EAAI,EACCC,EAAaE,KACdE,EAASV,KAAKR,MAAMO,UAAUY,OAAOL,EAAaE,KAAKH,GAAGO,SAASC,OACvEb,KAAKO,SAAS,CAAER,UAAWW,I,kLAIhBI,G,gFACfC,QAAQC,IAAIF,EAAMG,OAAOC,OAGJ,YAFjBC,EAAgBL,EAAMG,OAAOC,O,yCAGtBlB,KAAKC,W,uBAGUC,IAAMC,IAAI,sC,OAGpC,IAHMiB,E,OACFC,EAAe,GAEXC,EAAI,EAAGA,EAAI,MAAOA,EACnBF,EAAYZ,KAAKT,UAAUuB,GAAGV,UAAYO,IACzCE,EAAeD,EAAYZ,KAAKT,UAAUuB,IAIlDtB,KAAKO,SAAS,CACVd,aAAc4B,EAAa5B,aAC3BC,eAAgB2B,EAAa3B,eAC7BC,UAAW0B,EAAa1B,UACxBC,YAAayB,EAAazB,YAC1BC,aAAcwB,EAAaxB,aAC3BC,eAAgBuB,EAAavB,iB,qJAKjC,OAAOE,KAAKR,MAAMO,UAAUwB,KAAI,SAACC,EAASF,GACtC,OAAO,4BAAQG,IAAKH,GAAIE,Q,+BAK5B,OACI,6BACC,wBAAIE,UAAU,SAAd,eAEA,yBAAKA,UAAU,QACZ,4BAAQC,SAAU3B,KAAKV,cACnB,0CACCU,KAAK4B,yBAId,yBAAKF,UAAU,eAEf,yBAAKA,UAAU,kBACf,6BACI,yBAAKG,MAAO,CAACC,cAAc,SAC3B,6CACA,4BAAK7C,EAAU8C,OAAO/B,KAAKR,MAAMC,iBAGrC,6BACI,yBAAKoC,MAAO,CAACC,cAAc,SAC3B,0CACA,4BAAK7C,EAAU8C,OAAO/B,KAAKR,MAAMG,cAGrC,6BACI,6CACA,4BAAKV,EAAU8C,OAAO/B,KAAKR,MAAMK,iBAIrC,yBAAK6B,UAAU,kBACf,6BACI,yBAAKG,MAAO,CAACC,cAAc,SAC3B,+CACA,4BAAK7C,EAAU8C,OAAO/B,KAAKR,MAAME,mBAGrC,6BACI,yBAAKmC,MAAO,CAACC,cAAc,SAC3B,4CACA,4BAAK7C,EAAU8C,OAAO/B,KAAKR,MAAMI,gBAGrC,6BACI,+CACA,4BAAKX,EAAU8C,OAAO/B,KAAKR,MAAMM,yB,GA7HhBkC,IAAMC,WCFvCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.06bb312b.chunk.js","sourcesContent":["import React from \"react\";\nimport Axios from \"axios\";\nimport \"./AppStyle.css\";\n\nconst formatter = new Intl.NumberFormat('en');\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            NewConfirmed: 0,\n            TotalConfirmed: 0,\n            NewDeaths: 0,\n            TotalDeaths: 0,\n            NewRecovered: 0,\n            TotalRecovered: 0,\n            Countries: []\n        }\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    async getData() {\n        const response = await Axios.get(\"https://api.covid19api.com/summary\");\n\n        const resCountries = await Axios.get(\"https://api.covid19api.com/countries\");\n        //const Countries = Object.keys(resCountries.data[0]);\n\n        this.setState({\n            NewConfirmed: response.data.Global.NewConfirmed,\n            TotalConfirmed: response.data.Global.TotalConfirmed,\n            NewDeaths: response.data.Global.NewDeaths,\n            TotalDeaths: response.data.Global.TotalDeaths,\n            NewRecovered: response.data.Global.NewRecovered,\n            TotalRecovered: response.data.Global.TotalRecovered,\n            \n        });\n\n        var x = 0;\n        for(x in resCountries.data) {\n            var joined = this.state.Countries.concat(resCountries.data[x].Country).sort();\n            this.setState({ Countries: joined });\n        }\n    }\n\n    async handleChange(event) {\n        console.log(event.target.value);\n        var chosenCountry = event.target.value;\n\n        if(chosenCountry === \"Global\") {\n            return this.getData();\n        }\n\n        const countryData = await Axios.get('https://api.covid19api.com/summary');\n        var countryData2 = \"\";\n\n        for(var i = 0; i < 186; ++i) {\n            if(countryData.data.Countries[i].Country === chosenCountry) {\n                countryData2 = countryData.data.Countries[i]\n            }\n        }\n\n        this.setState({\n            NewConfirmed: countryData2.NewConfirmed,\n            TotalConfirmed: countryData2.TotalConfirmed,\n            NewDeaths: countryData2.NewDeaths,\n            TotalDeaths: countryData2.TotalDeaths,\n            NewRecovered: countryData2.NewRecovered,\n            TotalRecovered: countryData2.TotalRecovered,\n        });\n      }\n\n    renderCountryOptions() {\n        return this.state.Countries.map((country, i) => {\n            return <option key={i}>{country}</option>\n        })\n    }\n\n    render() {\n        return(\n            <div>\n             <h1 className=\"title\">Corona Dash</h1>\n\n             <div className=\"drop\">\n                <select onChange={this.handleChange}>\n                    <option>Global</option>\n                    {this.renderCountryOptions()}\n                </select>\n            </div>\n\n            <div className=\"dataDisplay\">\n\n            <div className=\"dataDisplayOne\">\n            <div>\n                <div style={{paddingBottom:\"10px\"}}>\n                <h3>New Confirmed</h3>\n                <h4>{formatter.format(this.state.NewConfirmed)}</h4>\n                </div>\n            </div>  \n            <div> \n                <div style={{paddingBottom:\"10px\"}}>\n                <h3>New Deaths</h3>\n                <h4>{formatter.format(this.state.NewDeaths)}</h4>\n                </div>\n            </div>  \n            <div> \n                <h3>New Recovered</h3>\n                <h4>{formatter.format(this.state.NewRecovered)}</h4>\n            </div>\n            </div>\n\n            <div className=\"dataDisplayTwo\">\n            <div>\n                <div style={{paddingBottom:\"10px\"}}>\n                <h3>Total Confirmed</h3>\n                <h4>{formatter.format(this.state.TotalConfirmed)}</h4>\n                </div>\n            </div>\n            <div>\n                <div style={{paddingBottom:\"10px\"}}>\n                <h3>Total Deaths</h3>\n                <h4>{formatter.format(this.state.TotalDeaths)}</h4>\n                </div>\n            </div>\n            <div>\n                <h3>Total Recovered</h3>\n                <h4>{formatter.format(this.state.TotalRecovered)}</h4>\n            </div>\n            </div>\n            \n            </div>\n\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}